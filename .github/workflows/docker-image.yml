name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            cd /home/ubuntu
  
            # 현재 어떤 환경이 떠있는지 확인 (Blue가 떠있으면 Green 배포, Green이 떠있으면 Blue 배포)
            CURRENT_COLOR=$(docker ps --format '{{.Names}}' | grep 'frontend-blue' || true)
  
            if [ -n "$CURRENT_COLOR" ]; then
              echo "=== Detected Blue is running. Deploying to Green. ==="
              docker-compose -f docker-compose.green.yml pull
              docker-compose -f docker-compose.green.yml up -d
  
              # Health check for Green
              sleep 10
              curl -f http://localhost:20080 || (echo "Green health check failed" && exit 1)
  
              # Nginx proxy_pass -> 20080
              sudo sed -i 's/127.0.0.1:10080/127.0.0.1:20080/g' /etc/nginx/conf.d/yourdomain.conf
              sudo nginx -s reload
  
              # Down Blue
              docker-compose -f docker-compose.blue.yml down
            else
              echo "=== Detected Green is running or nothing is running. Deploying to Blue. ==="
              docker-compose -f docker-compose.blue.yml pull
              docker-compose -f docker-compose.blue.yml up -d
  
              # Health check for Blue
              sleep 10
              curl -f http://localhost:10080 || (echo "Blue health check failed" && exit 1)
  
              # Nginx proxy_pass -> 10080
              sudo sed -i 's/127.0.0.1:20080/127.0.0.1:10080/g' /etc/nginx/conf.d/yourdomain.conf
              sudo nginx -s reload
  
              # Down Green
              docker-compose -f docker-compose.green.yml down
            fi
  
            # Docker prune
            docker image prune -f
