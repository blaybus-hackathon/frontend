name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to server (Blue/Green)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}            # 예: 52.78.xxx.xxx
          username: ubuntu
          key: ${{ secrets.KEY }}             # SSH Private Key
          script: |
            cd /home/ubuntu

            echo "1) 현재 떠 있는 컨테이너가 Blue인지 Green인지 확인"
            CURRENT_COLOR=$(docker ps --format '{{.Names}}' | grep 'frontend-blue' || true)

            if [ -n "$CURRENT_COLOR" ]; then
              echo "===> Blue가 현재 동작 중이므로, Green에 새 버전 배포"
              # 2) Green 이미지 Pull & 띄우기
              docker-compose -f docker-compose.green.yml pull
              docker-compose -f docker-compose.green.yml up -d

              # 3) 헬스체크 (간단히 localhost:20080 접근)
              echo "===> Health Check for Green"
              sleep 5
              curl -f http://blaybus:20080 || (echo "Green health check failed!" && exit 1)

              echo "===> Nginx를 Green(20080)으로 전환"
              sudo sed -i 's/blaybus:10080/blaybus:20080/g' /etc/nginx/conf.d/myapp.conf
              sudo nginx -t
              sudo nginx -s reload

              echo "===> Blue 종료"
              docker-compose -f docker-compose.blue.yml down

            else
              echo "===> Green이 현재 동작 중(또는 아무것도 안 떠 있음) -> Blue에 새 버전 배포"
              # 2) Blue 이미지 Pull & 띄우기
              docker-compose -f docker-compose.blue.yml pull
              docker-compose -f docker-compose.blue.yml up -d

              # 3) 헬스체크
              echo "===> Health Check for Blue"
              sleep 5
              curl -f http://localhost:10080 || (echo "Blue health check failed!" && exit 1)

              echo "===> Nginx를 Blue(10080)으로 전환"
              sudo sed -i 's/blaybus:20080/blaybus:10080/g' /etc/nginx/conf.d/myapp.conf
              sudo nginx -t
              sudo nginx -s reload

              echo "===> Green 종료"
              docker-compose -f docker-compose.green.yml down
            fi

            echo "===> 불필요한 이미지 정리"
            docker image prune -f
